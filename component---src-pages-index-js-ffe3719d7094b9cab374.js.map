{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/esm/Face.js","webpack:///./node_modules/@material-ui/icons/esm/Textsms.js","webpack:///./node_modules/@material-ui/icons/esm/ArrowLeft.js","webpack:///./node_modules/@material-ui/icons/esm/ArrowRight.js","webpack:///./src/pages/index.js"],"names":["createSvgIcon","d","mod","n","m","Home","data","useState","counter","setCounter","nodes","allMdx","len","length","direction","css","rhythm","href","style","display","IconButton","color","aria-label","size","Face","Textsms","onClick","ArrowLeft","Card","variant","CardActionArea","slug","CardContent","frontmatter","tags","map","tag","id","Chip","key","label","CardHeader","title","titleTypographyProps","description","ArrowRight"],"mappings":"0PAEe,SAAAA,EAAA,GAA4B,gBAAoB,OAAQ,CACrEC,EAAG,iaACD,QCFW,SAAAD,EAAA,GAA4B,gBAAoB,OAAQ,CACrEC,EAAG,wHACD,WCFW,SAAAD,EAAA,GAA4B,gBAAoB,OAAQ,CACrEC,EAAG,sBACD,aCFW,SAAAD,EAAA,GAA4B,gBAAoB,OAAQ,CACrEC,EAAG,uBACD,c,oCC4BJ,SAASC,EAAIC,EAAGC,GACd,OAASD,EAAIC,EAAKA,GAAKA,E,4/BAGV,SAASC,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAAQ,EAEPC,mBAAS,GAAhCC,EAF8B,KAErBC,EAFqB,KAG/BC,EAAQJ,EAAKK,OAAOD,MACpBE,EAAMF,EAAMG,OAElB,OACE,uBACE,YAAC,IAAD,CAAQC,UAAU,SAClB,YAAC,IAAD,MACF,mBAAKC,IAAKA,YAAF,yCAGKC,YAAO,GAHZ,gBAISA,YAAO,KAJhB,qDAQN,mBAAKD,IAAG,GACN,kBAAIA,IAAG,GAAP,UACA,kBAAIA,IAAG,GAAP,oDACA,iBAAGA,IAAG,GAAN,gDAA8E,iBAAGE,KAAK,YAAYC,MAAO,CAACC,QAAS,iBAArC,eAEhF,mBAAKJ,IAAG,GACN,mBAAKA,IAAG,GACN,kCACA,YAACK,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,WACXL,KAAM,kBACNF,IAAG,EACHQ,KAAK,SACH,YAACC,EAAD,QAGN,mBAAKT,IAAG,GACN,oCACA,YAACK,EAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,aAAaL,KAAM,oBAAqBF,IAAG,EAA2CQ,KAAK,SAAQ,YAACE,EAAD,SAG9I,mBAAKV,IAAG,GACN,0CAEF,mBAAKA,IAAG,GACN,YAACK,EAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,WAAWI,QAAS,kBAAKjB,EAAWP,EAAIM,EAAQ,EAAGI,KAAQG,IAAG,EAAuDQ,KAAK,SAAQ,YAACI,EAAD,OACzK,YAACC,EAAA,EAAD,CAAMC,QAAU,WAAWd,IAAG,GAC5B,YAACe,EAAA,EAAD,CAAgBb,KAAWP,EAAMF,GAASuB,KAAtB,KAChB,YAACC,EAAA,EAAD,KACI,kBAAIjB,IAAG,GAIFL,EAAMF,GAASyB,YAAYC,KAAKC,KAAI,SAACC,GAClC,OACI,kBAAIC,GAAID,EAAMrB,IAAG,GACb,YAACuB,EAAA,EAAD,CAAMC,IAAKH,EAAKI,MAAOJ,EAAKrB,IAAG,UAMnD,YAAC0B,EAAA,EAAD,CAAY1B,IAAG,EAA2B2B,MAAShC,EAAMF,GAASyB,YAAYS,MAAOC,qBAAsB,CAACd,QAAS,eACrH,YAACG,EAAA,EAAD,CAAajB,IAAG,GAA4BL,EAAMF,GAASyB,YAAYW,eAG7E,YAACxB,EAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,WAAWI,QAAS,kBAAKjB,EAAWP,EAAIM,EAAQ,EAAGI,KAAQG,IAAG,EAAuDQ,KAAK,SAAQ,YAACsB,EAAD","file":"component---src-pages-index-js-ffe3719d7094b9cab374.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 11.75c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zm6 0c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8 0-.29.02-.58.05-.86 2.36-1.05 4.23-2.98 5.21-5.37C11.07 8.33 14.05 10 17.42 10c.78 0 1.53-.09 2.25-.26.21.71.33 1.47.33 2.26 0 4.41-3.59 8-8 8z\"\n}), 'Face');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM9 11H7V9h2v2zm4 0h-2V9h2v2zm4 0h-2V9h2v2z\"\n}), 'Textsms');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14 7l-5 5 5 5V7z\"\n}), 'ArrowLeft');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 17l5-5-5-5v10z\"\n}), 'ArrowRight');","import React, {useState} from \"react\"\r\nimport { css } from \"@emotion/react\"\r\nimport { Card, CardActionArea, CardHeader, CardContent, IconButton, Chip } from '@material-ui/core'\r\nimport {Face, Textsms, ArrowLeft, ArrowRight} from '@material-ui/icons'\r\nimport { rhythm } from \"../utils/typography\"\r\nimport {graphql} from 'gatsby'\r\nimport Scroll from '../components/scrollButton'\r\nimport Logo from '../components/contactIcons'\r\n// import {withStyles} from '@material-ui/core/styles';\r\n\r\n\r\n// const ResizableIconButton = ({classes, size, ...props}) =>\r\n//     <IconButton className={classes[size]}\r\n//                 {...props}/>;\r\n\r\n// const styles = {\r\n//     small: {\r\n//         '& svg': {\r\n//             fontSize: 18\r\n//         }\r\n//     },\r\n//     medium: {\r\n//         '& svg': {\r\n//             fontSize: 24\r\n//         }\r\n//     },\r\n//     large: {\r\n//         '& svg': {\r\n//             fontSize: 60\r\n//         }\r\n//     }\r\n// };\r\nfunction mod(n, m) {\r\n  return ((n % m) + m) % m;\r\n}\r\n\r\nexport default function Home({ data }) {\r\n  // const But = withStyles(styles)(ResizableIconButton);\r\n  const [counter, setCounter] = useState(0);\r\n  const nodes = data.allMdx.nodes;\r\n  const len = nodes.length;\r\n\r\n  return (\r\n    <div>\r\n      <Scroll direction='Down'/>\r\n      <Logo/>\r\n    <div css={css`        \r\n      margin: 0 auto;\r\n      max-width: 800px;\r\n      padding: ${rhythm(0)};\r\n      padding-top: ${rhythm(1.5)};\r\n      background-color: #FFFFFF;\r\n      margin-bottom: 3rem\r\n     `}>\r\n      <div css={css`padding-top: 5rem; margin-bottom:3rem`}>\r\n        <h1 css={css`text-align: center`}>Hello!</h1>\r\n        <h2 css={css`text-align: center`}>Welcome to the personal site of Andrew Sue (me)!</h2>\r\n        <p css={css`text-align: center`}>Play around, click on random things, view my <a href=\"projects/\" style={{display: \"inline-block\"}}>projects!</a></p>\r\n      </div>\r\n      <div css={css`display: flex`}>\r\n        <div css={css`margin-right: auto; margin-left: auto;`}>\r\n          <h3>About Me</h3>\r\n          <IconButton \r\n            color='primary' \r\n            aria-label='About Me' \r\n            href={'contents/About/'} \r\n            css={css`text-decoration: none !important;`}\r\n            size='large' >\r\n              <Face/>\r\n          </IconButton>\r\n        </div>\r\n        <div css={css`margin-right: auto; margin-left: auto;`}>\r\n          <h3>Contact Me</h3>\r\n          <IconButton color='primary' aria-label='Contact Me' href={'contents/Contact/'} css={css`text-decoration: none !important; `} size='large'><Textsms/></IconButton>\r\n        </div>\r\n      </div>\r\n      <div css={css`margin-top: 8rem; margin-bottom: 3rem`}>\r\n        <h3>Project Gallery</h3>\r\n      </div>\r\n      <div css={css`display: flex;`}>\r\n        <IconButton color='primary' aria-label='previous' onClick={()=>(setCounter(mod(counter-1, len)))} css={css`text-decoration: none !important; margin: auto`} size='large'><ArrowLeft/></IconButton>\r\n        <Card variant = \"outlined\" css={css`width: 30rem; margin:auto`}>\r\n          <CardActionArea href = {`${nodes[counter].slug}/`}>\r\n              <CardContent>\r\n                  <ul css = {css`\r\n                              overflow-x: auto;\r\n                              margin:auto\r\n                              `}>\r\n                      {nodes[counter].frontmatter.tags.map((tag)=>{\r\n                          return(\r\n                              <li id={tag}  css={css`display: inline-block; margin: 0px`}>\r\n                                  <Chip key={tag} label={tag} css={css`margin: 0px`}/>\r\n                              </li>\r\n                          )\r\n                      })}\r\n                  </ul>\r\n              </CardContent>\r\n              <CardHeader css={css`text-align: center`} title = {nodes[counter].frontmatter.title} titleTypographyProps={{variant: 'subtitle1'}}/>\r\n              <CardContent css={css`text-align: center`}>{nodes[counter].frontmatter.description}</CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n        <IconButton color='primary' aria-label='previous' onClick={()=>(setCounter(mod(counter+1, len)))} css={css`text-decoration: none !important; margin: auto`} size='large'><ArrowRight/></IconButton>\r\n      </div>\r\n        \r\n    </div>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMdx(filter: {frontmatter: {category: {eq: \"projects\"}}}) {\r\n      nodes {\r\n        id\r\n        frontmatter {\r\n          title\r\n          tags\r\n          description\r\n        }\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}