{"componentChunkName":"component---src-components-template-js","path":"/contents/projects/Gitlet/","result":{"data":{"mdx":{"frontmatter":{"title":"Gitlet","toc":true,"category":"projects","tags":["Academic","Software"]},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Gitlet\",\n  \"category\": \"projects\",\n  \"tags\": [\"Academic\", \"Software\"],\n  \"toc\": true,\n  \"priority\": 10,\n  \"description\": \"A watered down version of the Github version control system\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"description\"\n  }, \"Description\"), mdx(\"p\", null, \"This is a class project for Berkeley's data structures class CS61B. \"), mdx(\"p\", null, \"In this project we are required to create a local version control system that is capable of doing most of the important functions of git such as add, commit and merge on files in a directory. This is a very unique project in that we are given almost no template from the instructors, and basically have to design the entire software and put them together by ourselves. \"), mdx(\"h2\", {\n    \"id\": \"approach\"\n  }, \"Approach\"), mdx(\"p\", null, \"The approach I took is to create my own nodes that point to each other in a one way linked list. For every node there are \\\"blobs\\\" which are the serialized and hashed contents of the files that the user wanted to check and the files in a \\\"stage.\\\" In my implementation, that is essentially just a list of the blobs that are not yet committed but added using commands like (\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"gitlet add\"), \" \", \"[analogous to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"git add\"), \"]\", \"). Unlike many of my classmates who create a seperate node for \\\"commits\\\", I just made sure the stage of the head node is no longer editable and created a new node as the head. \"), mdx(\"h2\", {\n    \"id\": \"reflection\"\n  }, \"Reflection\"), mdx(\"p\", null, \"Through out the process of this project, I unsurprisingly learned a lot of things, both technical and more importantly the entire process of software design. From the technical aspect, I gained a deep understanding of the concept of persistance, serialization, hashing and Github workflow. On the design aspect I personally experience the amount of thought and planning is needed for a project of this scale. Especially the importance of planning, as I had to do a lot of work throughout the project that is actually avoidable if I plan and flush out my idea a lot more in the beginning.  \"), mdx(\"h2\", {\n    \"id\": \"topics\"\n  }, \"Topics:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Github workflow, Software Design Process, Hashing, Serialization, Persistence\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Description"},{"depth":2,"value":"Approach"},{"depth":2,"value":"Reflection"},{"depth":2,"value":"Topics:"}],"tableOfContents":{"items":[{"url":"#description","title":"Description"},{"url":"#approach","title":"Approach"},{"url":"#reflection","title":"Reflection"},{"url":"#topics","title":"Topics:"}]},"fields":{"slug":"/contents/projects/Gitlet/"}}},"pageContext":{"slug":"/contents/projects/Gitlet/"}},"staticQueryHashes":[]}