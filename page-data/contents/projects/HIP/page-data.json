{"componentChunkName":"component---src-components-template-js","path":"/contents/projects/HIP/","result":{"data":{"mdx":{"frontmatter":{"title":"Hot Interior Protection System (HIP)","toc":true,"category":"projects","tags":["Personal","Hardware"]},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hot Interior Protection System (HIP)\",\n  \"category\": \"projects\",\n  \"tags\": [\"Personal\", \"Hardware\"],\n  \"toc\": true,\n  \"priority\": 5,\n  \"description\": \"A system to remind parents of their child if left alone in car\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"description\"\n  }, \"Description\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Collaborators\"), \": \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"dlzou.github.io\"\n  }), \"Daniel Zou\"), \", Fred Hua \"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Full Info\"), \": \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/dlzou/hip-system/\"\n  }), \"https://github.com/dlzou/hip-system/\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Note*:\"), \" This project is unfinished as of now, more information will be updated in the future\"), mdx(\"p\", null, \"This is a project that is aimed to remind parents if they accidentally left their child in their vehicle. I am in charged of the hardware portion, so basically the wiring of the sensors and the communication with vehicle via CAN.\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"insert photo\")), mdx(\"h2\", {\n    \"id\": \"approach\"\n  }, \"Approach\"), mdx(\"p\", null, \" The system is composed of 3 main parts. the sensor module, detection module and an mobile app. In principle, the driver and child sit on pressure pads. If there is no pressure on driver's pressure pad, but there is pressure on the child pressure pad, an object/facial recognition script is triggered to see if the object is indeed a child on the pressure pad. If so, the vehicle window would be rolled down, alarm and honks will activate to attract the attentions of bystanders and notify the parents on their phone via a mobile app with information such as the in vehicle temperature. \"), mdx(\"p\", null, \" To achieve the functions above, we basically connect an Arduino and a Raspberry Pi together so that when the sensor data indicates a child alone, the Arduino will trigger the Raspberry Pi module to start the recognition script. The Arduino is also used as an interface to communicate commands such as honk horns, roll down windows, etc. when appropriate.\"), mdx(\"p\", null, \" \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"insert schematic\")), mdx(\"h2\", {\n    \"id\": \"topics\"\n  }, \"Topics:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Arduino, Raspberry Pi, CAN \")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Description"},{"depth":2,"value":"Approach"},{"depth":2,"value":"Topics:"}],"tableOfContents":{"items":[{"url":"#description","title":"Description"},{"url":"#approach","title":"Approach"},{"url":"#topics","title":"Topics:"}]},"fields":{"slug":"/contents/projects/HIP/"}}},"pageContext":{"slug":"/contents/projects/HIP/"}},"staticQueryHashes":[]}